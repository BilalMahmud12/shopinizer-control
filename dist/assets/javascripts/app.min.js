Vue.component('treeselect', VueTreeselect.Treeselect)

new Vue({
    el: '#app',
    data: {
        // treeselect dump
        treeselect_value: null,
        treeselect_options: [ {
            id: 'a',
            label: 'a',
            children: [ {
            id: 'aa',
            label: 'aa',
            }, {
            id: 'ab',
            label: 'ab',
            } ],
        }, {
            id: 'b',
            label: 'b',
        }, {
            id: 'c',
            label: 'c',
        } ],
    },
});

Dropzone.autoDiscover = false;

$(document).ready(function() {
    // Tippy
    tippy('[data-tippy-content]', {
        placement: 'right'
    });

    // Records tables
    var mainTable = $('#records-table').DataTable({
        columnDefs: [
            {
                "targets": 'no-sort',
                "orderable": false,
            },
            {
                targets: 0,
                data: "select",
                searchable: false,
                orderable: false,
                className: 'select-checkbox',
                width: "4%"
            }
        ],
        responsive: true,
        select: {
            style: 'multi',
            selector: 'td:first-child'
        },
        order: [[ 1, 'asc' ]]
    });

    $('.select-checkbox').on('click', function() {
        $(this).find('.select-row').prop("checked", !$(this).find('.select-row').prop("checked"));
    });

    $('.select-all').click(function() {
        var all = mainTable.rows({ search: 'applied' }).count();
        var selectedRows = mainTable.rows({ selected: true, search: 'applied' }).count();

        if (selectedRows < all) {
            mainTable.rows({ search: 'applied' }).deselect();
            mainTable.rows({ search: 'applied' }).select();
            $(this).find('input').prop("checked", true);
            $('#records-table').find('.select-row').prop("checked", true);
        } else {
            mainTable.rows({ search: 'applied' }).deselect();
            $(this).find('input').prop("checked", false);
            $('#records-table').find('.select-row').prop("checked", false);
        }
    });

    // Quill editor
    new Quill('#editor', {
        theme: 'snow'
    });

    // Select2
    $(".select2-df").select2({});

    // Upload images
    $("#upload-widget").dropzone({
        url: "/upload",
        dictDefaultMessage: "Drag & Drop images here to upload.",
        uploadMultiple: true,
        capture: true,
    });

    // Variations repeater
    $('.variations-repeater').repeater({
        repeaters: [{
            selector: '.variation-values-repeater'
        }]
    });

    // Customizations repeater
    $('.customizations-repeater').repeater({
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiVnVlLmNvbXBvbmVudCgndHJlZXNlbGVjdCcsIFZ1ZVRyZWVzZWxlY3QuVHJlZXNlbGVjdClcclxuXHJcbm5ldyBWdWUoe1xyXG4gICAgZWw6ICcjYXBwJyxcclxuICAgIGRhdGE6IHtcclxuICAgICAgICAvLyB0cmVlc2VsZWN0IGR1bXBcclxuICAgICAgICB0cmVlc2VsZWN0X3ZhbHVlOiBudWxsLFxyXG4gICAgICAgIHRyZWVzZWxlY3Rfb3B0aW9uczogWyB7XHJcbiAgICAgICAgICAgIGlkOiAnYScsXHJcbiAgICAgICAgICAgIGxhYmVsOiAnYScsXHJcbiAgICAgICAgICAgIGNoaWxkcmVuOiBbIHtcclxuICAgICAgICAgICAgaWQ6ICdhYScsXHJcbiAgICAgICAgICAgIGxhYmVsOiAnYWEnLFxyXG4gICAgICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgIGlkOiAnYWInLFxyXG4gICAgICAgICAgICBsYWJlbDogJ2FiJyxcclxuICAgICAgICAgICAgfSBdLFxyXG4gICAgICAgIH0sIHtcclxuICAgICAgICAgICAgaWQ6ICdiJyxcclxuICAgICAgICAgICAgbGFiZWw6ICdiJyxcclxuICAgICAgICB9LCB7XHJcbiAgICAgICAgICAgIGlkOiAnYycsXHJcbiAgICAgICAgICAgIGxhYmVsOiAnYycsXHJcbiAgICAgICAgfSBdLFxyXG4gICAgfSxcclxufSk7XHJcblxyXG5Ecm9wem9uZS5hdXRvRGlzY292ZXIgPSBmYWxzZTtcclxuXHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xyXG4gICAgLy8gVGlwcHlcclxuICAgIHRpcHB5KCdbZGF0YS10aXBweS1jb250ZW50XScsIHtcclxuICAgICAgICBwbGFjZW1lbnQ6ICdyaWdodCdcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFJlY29yZHMgdGFibGVzXHJcbiAgICB2YXIgbWFpblRhYmxlID0gJCgnI3JlY29yZHMtdGFibGUnKS5EYXRhVGFibGUoe1xyXG4gICAgICAgIGNvbHVtbkRlZnM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCJ0YXJnZXRzXCI6ICduby1zb3J0JyxcclxuICAgICAgICAgICAgICAgIFwib3JkZXJhYmxlXCI6IGZhbHNlLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXRzOiAwLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogXCJzZWxlY3RcIixcclxuICAgICAgICAgICAgICAgIHNlYXJjaGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgb3JkZXJhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ3NlbGVjdC1jaGVja2JveCcsXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogXCI0JVwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIHJlc3BvbnNpdmU6IHRydWUsXHJcbiAgICAgICAgc2VsZWN0OiB7XHJcbiAgICAgICAgICAgIHN0eWxlOiAnbXVsdGknLFxyXG4gICAgICAgICAgICBzZWxlY3RvcjogJ3RkOmZpcnN0LWNoaWxkJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgb3JkZXI6IFtbIDEsICdhc2MnIF1dXHJcbiAgICB9KTtcclxuXHJcbiAgICAkKCcuc2VsZWN0LWNoZWNrYm94Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCh0aGlzKS5maW5kKCcuc2VsZWN0LXJvdycpLnByb3AoXCJjaGVja2VkXCIsICEkKHRoaXMpLmZpbmQoJy5zZWxlY3Qtcm93JykucHJvcChcImNoZWNrZWRcIikpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgJCgnLnNlbGVjdC1hbGwnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICB2YXIgYWxsID0gbWFpblRhYmxlLnJvd3MoeyBzZWFyY2g6ICdhcHBsaWVkJyB9KS5jb3VudCgpO1xyXG4gICAgICAgIHZhciBzZWxlY3RlZFJvd3MgPSBtYWluVGFibGUucm93cyh7IHNlbGVjdGVkOiB0cnVlLCBzZWFyY2g6ICdhcHBsaWVkJyB9KS5jb3VudCgpO1xyXG5cclxuICAgICAgICBpZiAoc2VsZWN0ZWRSb3dzIDwgYWxsKSB7XHJcbiAgICAgICAgICAgIG1haW5UYWJsZS5yb3dzKHsgc2VhcmNoOiAnYXBwbGllZCcgfSkuZGVzZWxlY3QoKTtcclxuICAgICAgICAgICAgbWFpblRhYmxlLnJvd3MoeyBzZWFyY2g6ICdhcHBsaWVkJyB9KS5zZWxlY3QoKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5maW5kKCdpbnB1dCcpLnByb3AoXCJjaGVja2VkXCIsIHRydWUpO1xyXG4gICAgICAgICAgICAkKCcjcmVjb3Jkcy10YWJsZScpLmZpbmQoJy5zZWxlY3Qtcm93JykucHJvcChcImNoZWNrZWRcIiwgdHJ1ZSk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbWFpblRhYmxlLnJvd3MoeyBzZWFyY2g6ICdhcHBsaWVkJyB9KS5kZXNlbGVjdCgpO1xyXG4gICAgICAgICAgICAkKHRoaXMpLmZpbmQoJ2lucHV0JykucHJvcChcImNoZWNrZWRcIiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAkKCcjcmVjb3Jkcy10YWJsZScpLmZpbmQoJy5zZWxlY3Qtcm93JykucHJvcChcImNoZWNrZWRcIiwgZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFF1aWxsIGVkaXRvclxyXG4gICAgbmV3IFF1aWxsKCcjZWRpdG9yJywge1xyXG4gICAgICAgIHRoZW1lOiAnc25vdydcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFNlbGVjdDJcclxuICAgICQoXCIuc2VsZWN0Mi1kZlwiKS5zZWxlY3QyKHt9KTtcclxuXHJcbiAgICAvLyBVcGxvYWQgaW1hZ2VzXHJcbiAgICAkKFwiI3VwbG9hZC13aWRnZXRcIikuZHJvcHpvbmUoe1xyXG4gICAgICAgIHVybDogXCIvdXBsb2FkXCIsXHJcbiAgICAgICAgZGljdERlZmF1bHRNZXNzYWdlOiBcIkRyYWcgJiBEcm9wIGltYWdlcyBoZXJlIHRvIHVwbG9hZC5cIixcclxuICAgICAgICB1cGxvYWRNdWx0aXBsZTogdHJ1ZSxcclxuICAgICAgICBjYXB0dXJlOiB0cnVlLFxyXG4gICAgfSk7XHJcblxyXG4gICAgLy8gVmFyaWF0aW9ucyByZXBlYXRlclxyXG4gICAgJCgnLnZhcmlhdGlvbnMtcmVwZWF0ZXInKS5yZXBlYXRlcih7XHJcbiAgICAgICAgcmVwZWF0ZXJzOiBbe1xyXG4gICAgICAgICAgICBzZWxlY3RvcjogJy52YXJpYXRpb24tdmFsdWVzLXJlcGVhdGVyJ1xyXG4gICAgICAgIH1dXHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBDdXN0b21pemF0aW9ucyByZXBlYXRlclxyXG4gICAgJCgnLmN1c3RvbWl6YXRpb25zLXJlcGVhdGVyJykucmVwZWF0ZXIoe1xyXG4gICAgfSk7XHJcbn0pOyJdfQ==