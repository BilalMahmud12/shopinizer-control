Vue.component('treeselect', VueTreeselect.Treeselect)

new Vue({
    el: '#app',
    data: {
        inventory: false,
        inventory_level: 1,
        purchasability: 1,
        related_products: true,
        customer_group_categories: true,
        customer_type: 1,

        // treeselect dump
        treeselect_value: null,
        treeselect_options: [
            {
                id: '1',
                label: 'Bath',
            },
            {
                id: '2',
                label: 'Kitchen',
                children: [
                    {
                        id: '4',
                        label: 'Publications',
                    },
                ],
            }, 
            {
                id: '3',
                label: 'Utility',
            }
        ],
    },
    components: {
        vuejsDatepicker
    },
    mounted: function() {
        $('.cscroll').scrollSpy({
            target: $('.nscroll a'),
	        activeClass: 'text-indigo-700 border-indigo-700'
        }).scroll();

        // Tippy
        tippy('[data-tippy-content]', {
            placement: 'right'
        });

        // Records tables
        var mainTable = $('#records-table').DataTable({
            columnDefs: [
                {
                    "targets": 'no-sort',
                    "orderable": false,
                },
                {
                    targets: 0,
                    data: "select",
                    searchable: false,
                    orderable: false,
                    className: 'select-checkbox',
                    width: "4%"
                }
            ],
            responsive: true,
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            order: [[ 1, 'asc' ]]
        });

        $('.select-checkbox').on('click', function() {
            $(this).find('.select-row').prop("checked", !$(this).find('.select-row').prop("checked"));
        });

        $('.select-all').click(function() {
            var all = mainTable.rows({ search: 'applied' }).count();
            var selectedRows = mainTable.rows({ selected: true, search: 'applied' }).count();

            if (selectedRows < all) {
                mainTable.rows({ search: 'applied' }).deselect();
                mainTable.rows({ search: 'applied' }).select();
                $(this).find('input').prop("checked", true);
                $('#records-table').find('.select-row').prop("checked", true);
            } else {
                mainTable.rows({ search: 'applied' }).deselect();
                $(this).find('input').prop("checked", false);
                $('#records-table').find('.select-row').prop("checked", false);
            }
        });

        // Quill editor init
        new Quill('#editor', {
            theme: 'snow'
        });

        // Select2 init
        $(".select2-df").select2({});

        Dropzone.autoDiscover = false;

        // Upload images init
        $("#upload-widget").dropzone({
            url: "/upload",
            dictDefaultMessage: "Drag & Drop images here to upload.",
            uploadMultiple: true,
            capture: true,
        });

        // Variations repeater
        $('.variations-repeater').repeater({
            repeaters: [{
                selector: '.variation-values-repeater'
            }]
        });

        // Customizations repeater
        $('.customizations-repeater').repeater({});

        // Custom Fields repeater
        $('.custom-fields-repeater').repeater({});

        // Option Values repeater
        $('.option-values-repeater').repeater({});

        // Customer Address repeater
        $('.customer-address-repeater').repeater({});

        // Category Discounts repeater
        $('.category-discounts-repeater').repeater({});

        // Product Discounts repeater
        $('.product-discounts-repeater').repeater({});
    }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlZ1ZS5jb21wb25lbnQoJ3RyZWVzZWxlY3QnLCBWdWVUcmVlc2VsZWN0LlRyZWVzZWxlY3QpXHJcblxyXG5uZXcgVnVlKHtcclxuICAgIGVsOiAnI2FwcCcsXHJcbiAgICBkYXRhOiB7XHJcbiAgICAgICAgaW52ZW50b3J5OiBmYWxzZSxcclxuICAgICAgICBpbnZlbnRvcnlfbGV2ZWw6IDEsXHJcbiAgICAgICAgcHVyY2hhc2FiaWxpdHk6IDEsXHJcbiAgICAgICAgcmVsYXRlZF9wcm9kdWN0czogdHJ1ZSxcclxuICAgICAgICBjdXN0b21lcl9ncm91cF9jYXRlZ29yaWVzOiB0cnVlLFxyXG4gICAgICAgIGN1c3RvbWVyX3R5cGU6IDEsXHJcblxyXG4gICAgICAgIC8vIHRyZWVzZWxlY3QgZHVtcFxyXG4gICAgICAgIHRyZWVzZWxlY3RfdmFsdWU6IG51bGwsXHJcbiAgICAgICAgdHJlZXNlbGVjdF9vcHRpb25zOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGlkOiAnMScsXHJcbiAgICAgICAgICAgICAgICBsYWJlbDogJ0JhdGgnLFxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBpZDogJzInLFxyXG4gICAgICAgICAgICAgICAgbGFiZWw6ICdLaXRjaGVuJyxcclxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogJzQnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYWJlbDogJ1B1YmxpY2F0aW9ucycsXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIH0sIFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBpZDogJzMnLFxyXG4gICAgICAgICAgICAgICAgbGFiZWw6ICdVdGlsaXR5JyxcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAgY29tcG9uZW50czoge1xyXG4gICAgICAgIHZ1ZWpzRGF0ZXBpY2tlclxyXG4gICAgfSxcclxuICAgIG1vdW50ZWQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICQoJy5jc2Nyb2xsJykuc2Nyb2xsU3B5KHtcclxuICAgICAgICAgICAgdGFyZ2V0OiAkKCcubnNjcm9sbCBhJyksXHJcblx0ICAgICAgICBhY3RpdmVDbGFzczogJ3RleHQtaW5kaWdvLTcwMCBib3JkZXItaW5kaWdvLTcwMCdcclxuICAgICAgICB9KS5zY3JvbGwoKTtcclxuXHJcbiAgICAgICAgLy8gVGlwcHlcclxuICAgICAgICB0aXBweSgnW2RhdGEtdGlwcHktY29udGVudF0nLCB7XHJcbiAgICAgICAgICAgIHBsYWNlbWVudDogJ3JpZ2h0J1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBSZWNvcmRzIHRhYmxlc1xyXG4gICAgICAgIHZhciBtYWluVGFibGUgPSAkKCcjcmVjb3Jkcy10YWJsZScpLkRhdGFUYWJsZSh7XHJcbiAgICAgICAgICAgIGNvbHVtbkRlZnM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBcInRhcmdldHNcIjogJ25vLXNvcnQnLFxyXG4gICAgICAgICAgICAgICAgICAgIFwib3JkZXJhYmxlXCI6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0YXJnZXRzOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IFwic2VsZWN0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgc2VhcmNoYWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgb3JkZXJhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6ICdzZWxlY3QtY2hlY2tib3gnLFxyXG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjQlXCJcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgcmVzcG9uc2l2ZTogdHJ1ZSxcclxuICAgICAgICAgICAgc2VsZWN0OiB7XHJcbiAgICAgICAgICAgICAgICBzdHlsZTogJ211bHRpJyxcclxuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAndGQ6Zmlyc3QtY2hpbGQnXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIG9yZGVyOiBbWyAxLCAnYXNjJyBdXVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcuc2VsZWN0LWNoZWNrYm94Jykub24oJ2NsaWNrJywgZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQodGhpcykuZmluZCgnLnNlbGVjdC1yb3cnKS5wcm9wKFwiY2hlY2tlZFwiLCAhJCh0aGlzKS5maW5kKCcuc2VsZWN0LXJvdycpLnByb3AoXCJjaGVja2VkXCIpKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLnNlbGVjdC1hbGwnKS5jbGljayhmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgdmFyIGFsbCA9IG1haW5UYWJsZS5yb3dzKHsgc2VhcmNoOiAnYXBwbGllZCcgfSkuY291bnQoKTtcclxuICAgICAgICAgICAgdmFyIHNlbGVjdGVkUm93cyA9IG1haW5UYWJsZS5yb3dzKHsgc2VsZWN0ZWQ6IHRydWUsIHNlYXJjaDogJ2FwcGxpZWQnIH0pLmNvdW50KCk7XHJcblxyXG4gICAgICAgICAgICBpZiAoc2VsZWN0ZWRSb3dzIDwgYWxsKSB7XHJcbiAgICAgICAgICAgICAgICBtYWluVGFibGUucm93cyh7IHNlYXJjaDogJ2FwcGxpZWQnIH0pLmRlc2VsZWN0KCk7XHJcbiAgICAgICAgICAgICAgICBtYWluVGFibGUucm93cyh7IHNlYXJjaDogJ2FwcGxpZWQnIH0pLnNlbGVjdCgpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCdpbnB1dCcpLnByb3AoXCJjaGVja2VkXCIsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgJCgnI3JlY29yZHMtdGFibGUnKS5maW5kKCcuc2VsZWN0LXJvdycpLnByb3AoXCJjaGVja2VkXCIsIHRydWUpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbWFpblRhYmxlLnJvd3MoeyBzZWFyY2g6ICdhcHBsaWVkJyB9KS5kZXNlbGVjdCgpO1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKCdpbnB1dCcpLnByb3AoXCJjaGVja2VkXCIsIGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICQoJyNyZWNvcmRzLXRhYmxlJykuZmluZCgnLnNlbGVjdC1yb3cnKS5wcm9wKFwiY2hlY2tlZFwiLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gUXVpbGwgZWRpdG9yIGluaXRcclxuICAgICAgICBuZXcgUXVpbGwoJyNlZGl0b3InLCB7XHJcbiAgICAgICAgICAgIHRoZW1lOiAnc25vdydcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gU2VsZWN0MiBpbml0XHJcbiAgICAgICAgJChcIi5zZWxlY3QyLWRmXCIpLnNlbGVjdDIoe30pO1xyXG5cclxuICAgICAgICBEcm9wem9uZS5hdXRvRGlzY292ZXIgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgLy8gVXBsb2FkIGltYWdlcyBpbml0XHJcbiAgICAgICAgJChcIiN1cGxvYWQtd2lkZ2V0XCIpLmRyb3B6b25lKHtcclxuICAgICAgICAgICAgdXJsOiBcIi91cGxvYWRcIixcclxuICAgICAgICAgICAgZGljdERlZmF1bHRNZXNzYWdlOiBcIkRyYWcgJiBEcm9wIGltYWdlcyBoZXJlIHRvIHVwbG9hZC5cIixcclxuICAgICAgICAgICAgdXBsb2FkTXVsdGlwbGU6IHRydWUsXHJcbiAgICAgICAgICAgIGNhcHR1cmU6IHRydWUsXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIFZhcmlhdGlvbnMgcmVwZWF0ZXJcclxuICAgICAgICAkKCcudmFyaWF0aW9ucy1yZXBlYXRlcicpLnJlcGVhdGVyKHtcclxuICAgICAgICAgICAgcmVwZWF0ZXJzOiBbe1xyXG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICcudmFyaWF0aW9uLXZhbHVlcy1yZXBlYXRlcidcclxuICAgICAgICAgICAgfV1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gQ3VzdG9taXphdGlvbnMgcmVwZWF0ZXJcclxuICAgICAgICAkKCcuY3VzdG9taXphdGlvbnMtcmVwZWF0ZXInKS5yZXBlYXRlcih7fSk7XHJcblxyXG4gICAgICAgIC8vIEN1c3RvbSBGaWVsZHMgcmVwZWF0ZXJcclxuICAgICAgICAkKCcuY3VzdG9tLWZpZWxkcy1yZXBlYXRlcicpLnJlcGVhdGVyKHt9KTtcclxuXHJcbiAgICAgICAgLy8gT3B0aW9uIFZhbHVlcyByZXBlYXRlclxyXG4gICAgICAgICQoJy5vcHRpb24tdmFsdWVzLXJlcGVhdGVyJykucmVwZWF0ZXIoe30pO1xyXG5cclxuICAgICAgICAvLyBDdXN0b21lciBBZGRyZXNzIHJlcGVhdGVyXHJcbiAgICAgICAgJCgnLmN1c3RvbWVyLWFkZHJlc3MtcmVwZWF0ZXInKS5yZXBlYXRlcih7fSk7XHJcblxyXG4gICAgICAgIC8vIENhdGVnb3J5IERpc2NvdW50cyByZXBlYXRlclxyXG4gICAgICAgICQoJy5jYXRlZ29yeS1kaXNjb3VudHMtcmVwZWF0ZXInKS5yZXBlYXRlcih7fSk7XHJcblxyXG4gICAgICAgIC8vIFByb2R1Y3QgRGlzY291bnRzIHJlcGVhdGVyXHJcbiAgICAgICAgJCgnLnByb2R1Y3QtZGlzY291bnRzLXJlcGVhdGVyJykucmVwZWF0ZXIoe30pO1xyXG4gICAgfVxyXG59KTtcclxuIl19
