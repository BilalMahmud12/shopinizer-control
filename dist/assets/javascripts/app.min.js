Vue.component('treeselect', VueTreeselect.Treeselect)

new Vue({
    el: '#app',
    data: {
        inventory: false,
        inventory_level: 1,
        purchasability: 1,
        related_products: true,
        customer_group_categories: true,

        // treeselect dump
        treeselect_value: null,
        treeselect_options: [
            {
                id: '1',
                label: 'Bath',
            },
            {
                id: '2',
                label: 'Kitchen',
                children: [
                    {
                        id: '4',
                        label: 'Publications',
                    },
                ],
            }, 
            {
                id: '3',
                label: 'Utility',
            }
        ],
    },
    components: {
        vuejsDatepicker
    },
    mounted: function() {
        $('.cscroll').scrollSpy({
            target: $('.nscroll a'),
	        activeClass: 'text-indigo-700 border-indigo-700'
        }).scroll();

        // Tippy
        tippy('[data-tippy-content]', {
            placement: 'right'
        });

        // Records tables
        var mainTable = $('#records-table').DataTable({
            columnDefs: [
                {
                    "targets": 'no-sort',
                    "orderable": false,
                },
                {
                    targets: 0,
                    data: "select",
                    searchable: false,
                    orderable: false,
                    className: 'select-checkbox',
                    width: "4%"
                }
            ],
            responsive: true,
            select: {
                style: 'multi',
                selector: 'td:first-child'
            },
            order: [[ 1, 'asc' ]]
        });

        $('.select-checkbox').on('click', function() {
            $(this).find('.select-row').prop("checked", !$(this).find('.select-row').prop("checked"));
        });

        $('.select-all').click(function() {
            var all = mainTable.rows({ search: 'applied' }).count();
            var selectedRows = mainTable.rows({ selected: true, search: 'applied' }).count();

            if (selectedRows < all) {
                mainTable.rows({ search: 'applied' }).deselect();
                mainTable.rows({ search: 'applied' }).select();
                $(this).find('input').prop("checked", true);
                $('#records-table').find('.select-row').prop("checked", true);
            } else {
                mainTable.rows({ search: 'applied' }).deselect();
                $(this).find('input').prop("checked", false);
                $('#records-table').find('.select-row').prop("checked", false);
            }
        });

        // Quill editor init
        new Quill('#editor', {
            theme: 'snow'
        });

        // Select2 init
        $(".select2-df").select2({});

        Dropzone.autoDiscover = false;

        // Upload images init
        $("#upload-widget").dropzone({
            url: "/upload",
            dictDefaultMessage: "Drag & Drop images here to upload.",
            uploadMultiple: true,
            capture: true,
        });

        // Variations repeater
        $('.variations-repeater').repeater({
            repeaters: [{
                selector: '.variation-values-repeater'
            }]
        });

        // Customizations repeater
        $('.customizations-repeater').repeater({});

        // Custom Fields repeater
        $('.custom-fields-repeater').repeater({});

        // Option Values repeater
        $('.option-values-repeater').repeater({});

        // Customer Address repeater
        $('.customer-address-repeater').repeater({});

        // Category Discounts repeater
        $('.category-discounts-repeater').repeater({});

        // Product Discounts repeater
        $('.product-discounts-repeater').repeater({});
    }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJWdWUuY29tcG9uZW50KCd0cmVlc2VsZWN0JywgVnVlVHJlZXNlbGVjdC5UcmVlc2VsZWN0KVxyXG5cclxubmV3IFZ1ZSh7XHJcbiAgICBlbDogJyNhcHAnLFxyXG4gICAgZGF0YToge1xyXG4gICAgICAgIGludmVudG9yeTogZmFsc2UsXHJcbiAgICAgICAgaW52ZW50b3J5X2xldmVsOiAxLFxyXG4gICAgICAgIHB1cmNoYXNhYmlsaXR5OiAxLFxyXG4gICAgICAgIHJlbGF0ZWRfcHJvZHVjdHM6IHRydWUsXHJcbiAgICAgICAgY3VzdG9tZXJfZ3JvdXBfY2F0ZWdvcmllczogdHJ1ZSxcclxuXHJcbiAgICAgICAgLy8gdHJlZXNlbGVjdCBkdW1wXHJcbiAgICAgICAgdHJlZXNlbGVjdF92YWx1ZTogbnVsbCxcclxuICAgICAgICB0cmVlc2VsZWN0X29wdGlvbnM6IFtcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgaWQ6ICcxJyxcclxuICAgICAgICAgICAgICAgIGxhYmVsOiAnQmF0aCcsXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGlkOiAnMicsXHJcbiAgICAgICAgICAgICAgICBsYWJlbDogJ0tpdGNoZW4nLFxyXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IFtcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlkOiAnNCcsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAnUHVibGljYXRpb25zJyxcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgXSxcclxuICAgICAgICAgICAgfSwgXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGlkOiAnMycsXHJcbiAgICAgICAgICAgICAgICBsYWJlbDogJ1V0aWxpdHknLFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgXSxcclxuICAgIH0sXHJcbiAgICBjb21wb25lbnRzOiB7XHJcbiAgICAgICAgdnVlanNEYXRlcGlja2VyXHJcbiAgICB9LFxyXG4gICAgbW91bnRlZDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgJCgnLmNzY3JvbGwnKS5zY3JvbGxTcHkoe1xyXG4gICAgICAgICAgICB0YXJnZXQ6ICQoJy5uc2Nyb2xsIGEnKSxcclxuXHQgICAgICAgIGFjdGl2ZUNsYXNzOiAndGV4dC1pbmRpZ28tNzAwIGJvcmRlci1pbmRpZ28tNzAwJ1xyXG4gICAgICAgIH0pLnNjcm9sbCgpO1xyXG5cclxuICAgICAgICAvLyBUaXBweVxyXG4gICAgICAgIHRpcHB5KCdbZGF0YS10aXBweS1jb250ZW50XScsIHtcclxuICAgICAgICAgICAgcGxhY2VtZW50OiAncmlnaHQnXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIC8vIFJlY29yZHMgdGFibGVzXHJcbiAgICAgICAgdmFyIG1haW5UYWJsZSA9ICQoJyNyZWNvcmRzLXRhYmxlJykuRGF0YVRhYmxlKHtcclxuICAgICAgICAgICAgY29sdW1uRGVmczogW1xyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIFwidGFyZ2V0c1wiOiAnbm8tc29ydCcsXHJcbiAgICAgICAgICAgICAgICAgICAgXCJvcmRlcmFibGVcIjogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhcmdldHM6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgZGF0YTogXCJzZWxlY3RcIixcclxuICAgICAgICAgICAgICAgICAgICBzZWFyY2hhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBvcmRlcmFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogJ3NlbGVjdC1jaGVja2JveCcsXHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiNCVcIlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICByZXNwb25zaXZlOiB0cnVlLFxyXG4gICAgICAgICAgICBzZWxlY3Q6IHtcclxuICAgICAgICAgICAgICAgIHN0eWxlOiAnbXVsdGknLFxyXG4gICAgICAgICAgICAgICAgc2VsZWN0b3I6ICd0ZDpmaXJzdC1jaGlsZCdcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgb3JkZXI6IFtbIDEsICdhc2MnIF1dXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5zZWxlY3QtY2hlY2tib3gnKS5vbignY2xpY2snLCBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgJCh0aGlzKS5maW5kKCcuc2VsZWN0LXJvdycpLnByb3AoXCJjaGVja2VkXCIsICEkKHRoaXMpLmZpbmQoJy5zZWxlY3Qtcm93JykucHJvcChcImNoZWNrZWRcIikpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcuc2VsZWN0LWFsbCcpLmNsaWNrKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICB2YXIgYWxsID0gbWFpblRhYmxlLnJvd3MoeyBzZWFyY2g6ICdhcHBsaWVkJyB9KS5jb3VudCgpO1xyXG4gICAgICAgICAgICB2YXIgc2VsZWN0ZWRSb3dzID0gbWFpblRhYmxlLnJvd3MoeyBzZWxlY3RlZDogdHJ1ZSwgc2VhcmNoOiAnYXBwbGllZCcgfSkuY291bnQoKTtcclxuXHJcbiAgICAgICAgICAgIGlmIChzZWxlY3RlZFJvd3MgPCBhbGwpIHtcclxuICAgICAgICAgICAgICAgIG1haW5UYWJsZS5yb3dzKHsgc2VhcmNoOiAnYXBwbGllZCcgfSkuZGVzZWxlY3QoKTtcclxuICAgICAgICAgICAgICAgIG1haW5UYWJsZS5yb3dzKHsgc2VhcmNoOiAnYXBwbGllZCcgfSkuc2VsZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJ2lucHV0JykucHJvcChcImNoZWNrZWRcIiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAkKCcjcmVjb3Jkcy10YWJsZScpLmZpbmQoJy5zZWxlY3Qtcm93JykucHJvcChcImNoZWNrZWRcIiwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBtYWluVGFibGUucm93cyh7IHNlYXJjaDogJ2FwcGxpZWQnIH0pLmRlc2VsZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAkKHRoaXMpLmZpbmQoJ2lucHV0JykucHJvcChcImNoZWNrZWRcIiwgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgJCgnI3JlY29yZHMtdGFibGUnKS5maW5kKCcuc2VsZWN0LXJvdycpLnByb3AoXCJjaGVja2VkXCIsIGZhbHNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBRdWlsbCBlZGl0b3IgaW5pdFxyXG4gICAgICAgIG5ldyBRdWlsbCgnI2VkaXRvcicsIHtcclxuICAgICAgICAgICAgdGhlbWU6ICdzbm93J1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBTZWxlY3QyIGluaXRcclxuICAgICAgICAkKFwiLnNlbGVjdDItZGZcIikuc2VsZWN0Mih7fSk7XHJcblxyXG4gICAgICAgIERyb3B6b25lLmF1dG9EaXNjb3ZlciA9IGZhbHNlO1xyXG5cclxuICAgICAgICAvLyBVcGxvYWQgaW1hZ2VzIGluaXRcclxuICAgICAgICAkKFwiI3VwbG9hZC13aWRnZXRcIikuZHJvcHpvbmUoe1xyXG4gICAgICAgICAgICB1cmw6IFwiL3VwbG9hZFwiLFxyXG4gICAgICAgICAgICBkaWN0RGVmYXVsdE1lc3NhZ2U6IFwiRHJhZyAmIERyb3AgaW1hZ2VzIGhlcmUgdG8gdXBsb2FkLlwiLFxyXG4gICAgICAgICAgICB1cGxvYWRNdWx0aXBsZTogdHJ1ZSxcclxuICAgICAgICAgICAgY2FwdHVyZTogdHJ1ZSxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLy8gVmFyaWF0aW9ucyByZXBlYXRlclxyXG4gICAgICAgICQoJy52YXJpYXRpb25zLXJlcGVhdGVyJykucmVwZWF0ZXIoe1xyXG4gICAgICAgICAgICByZXBlYXRlcnM6IFt7XHJcbiAgICAgICAgICAgICAgICBzZWxlY3RvcjogJy52YXJpYXRpb24tdmFsdWVzLXJlcGVhdGVyJ1xyXG4gICAgICAgICAgICB9XVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBDdXN0b21pemF0aW9ucyByZXBlYXRlclxyXG4gICAgICAgICQoJy5jdXN0b21pemF0aW9ucy1yZXBlYXRlcicpLnJlcGVhdGVyKHt9KTtcclxuXHJcbiAgICAgICAgLy8gQ3VzdG9tIEZpZWxkcyByZXBlYXRlclxyXG4gICAgICAgICQoJy5jdXN0b20tZmllbGRzLXJlcGVhdGVyJykucmVwZWF0ZXIoe30pO1xyXG5cclxuICAgICAgICAvLyBPcHRpb24gVmFsdWVzIHJlcGVhdGVyXHJcbiAgICAgICAgJCgnLm9wdGlvbi12YWx1ZXMtcmVwZWF0ZXInKS5yZXBlYXRlcih7fSk7XHJcblxyXG4gICAgICAgIC8vIEN1c3RvbWVyIEFkZHJlc3MgcmVwZWF0ZXJcclxuICAgICAgICAkKCcuY3VzdG9tZXItYWRkcmVzcy1yZXBlYXRlcicpLnJlcGVhdGVyKHt9KTtcclxuXHJcbiAgICAgICAgLy8gQ2F0ZWdvcnkgRGlzY291bnRzIHJlcGVhdGVyXHJcbiAgICAgICAgJCgnLmNhdGVnb3J5LWRpc2NvdW50cy1yZXBlYXRlcicpLnJlcGVhdGVyKHt9KTtcclxuXHJcbiAgICAgICAgLy8gUHJvZHVjdCBEaXNjb3VudHMgcmVwZWF0ZXJcclxuICAgICAgICAkKCcucHJvZHVjdC1kaXNjb3VudHMtcmVwZWF0ZXInKS5yZXBlYXRlcih7fSk7XHJcbiAgICB9XHJcbn0pO1xyXG4iXX0=
